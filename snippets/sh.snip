snippet     options
alias       op opts opt
options     head
    while getopts ":${1:#:OPTION}" opt; do
        case $opt in
            $1) ${2:opt_val="$OPTARG"} ;;
            *) # do default stuff ;;
        esac
    done
    shift $((OPTIND - 1))
    ${0:TARGET}


snippet     getopts-long
options     head
alias       opl optsl optl
    for $ARG in "$@"; do
    case "$ARG" in
        --${1:extension}=*)
        ${2:EXTENSION}="${ARG#*=}"
        shift # past this arg
        ;;
        --${3:default})
        ${4:DEFAULT}=YES
        shift # past this arg
        ;;
        *) # unknown option ;;
    esac
    done
    ${0}


snippet     echo
options     head
alias       ek
    echo "${0:TARGET}"

snippet     bin-function
options     head
alias       bin binf
    #!/bin/bash -e

    `expand('%:t:r')`${1:#:Suffix}() {
        ${0:return $?}
    }

    # If this file is on the terminal $PATH's just run the function \``expand('%:t:r')`$1\`
    # Otherwise just source it and run
    if [ "$(basename "\$0")" = "`expand('%:t')`" ]; then
        `expand('%:t:r')`$1 "${@}"
    fi


snippet     expression
alias       exp expr
options     word
    $((${0}))


snippet     relative-require
alias       rel
options     head
    # Relative require
    ${1:scriptname}=${BASH_SOURCE%/*}
    if [[ ! -d "$$1" ]]
    then
      $1=$(dirname "\$0")
    fi

    . "$$1" ./${0:TARGET}


snippet     trap
alias       trap tr
options     head
    trap '{ rm -rf "${0:TARGET}" ; }' SIGINT SIGTERM EXIT


snippet     underline-msg
alias       unl undl
options     head
    printf "%0.s-" $(seq 1 ${#${0:TARGET}})


snippet     function
alias       function func fun
options     head
    ${1:#:name}(){${0:TARGET}

snippet     script-require
alias       req
options     head
    CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

snippet     strict
alias       strict
options     head
    #!/bin/bash
    set -Eeuo pipefail
    ${0:TARGET}
